1)создать GCE инстанс типа e2-medium и диском 10GB
 -- в янлекс облаке поднимаем нужную вм - dz5
2)установить на него PostgreSQL 14 с дефолтными настройками
      -- {
      -- sudo apt update 
      -- sudo DEBIAN_FRONTEND=noninteractive apt upgrade -y -q 
      -- sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' 
      -- sudo apt install gnupg -y
      -- wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - 
      -- sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt -y install postgresql-14
      -- }
3)применить параметры настройки PostgreSQL из прикрепленного к материалам занятия файла
postgres@dz5:/etc/postgresql/14/main$ ls -ltr
total 60
      -- -rw-r--r-- 1 postgres postgres   317 Apr 17 19:10 start.conf
      -- -rw-r--r-- 1 postgres postgres   143 Apr 17 19:10 pg_ctl.conf
      -- -rw-r----- 1 postgres postgres  1636 Apr 17 19:10 pg_ident.conf
      -- -rw-r----- 1 postgres postgres  5002 Apr 17 19:10 pg_hba.conf
      -- -rw-r--r-- 1 postgres postgres   315 Apr 17 19:10 environment
      -- drwxr-xr-x 2 postgres postgres  4096 Apr 17 19:10 conf.d
      -- -rw-r--r-- 1 postgres postgres 29048 Apr 17 19:10 postgresql.conf
      -- postgres@dz5:/etc/postgresql/14/main$ view postgresql.conf
      -- изменяем на требуемые параметры.
4)выполнить pgbench -i postgres
      -- postgres@dz5:/etc/postgresql/14/main$ pgbench -i postgres
      -- dropping old tables...
      -- NOTICE:  table "pgbench_accounts" does not exist, skipping
      -- NOTICE:  table "pgbench_branches" does not exist, skipping
      -- NOTICE:  table "pgbench_history" does not exist, skipping
      -- NOTICE:  table "pgbench_tellers" does not exist, skipping
      -- creating tables...
      -- generating data (client-side)...
      -- 100000 of 100000 tuples (100%) done (elapsed 0.07 s, remaining 0.00 s)
      -- vacuuming...
      -- creating primary keys...
      -- done in 0.61 s (drop tables 0.00 s, create tables 0.01 s, client-side generate 0.47 s, vacuum 0.06 s, primary keys 0.07 s).

5-6)запустить pgbench -c8 -P 60 -T 600 -U postgres postgres,дать отработать до конца
      -- postgres@dz5:/etc/postgresql/14/main$ pgbench -c8 -P 60 -T 600 -U postgres postgres
      -- pgbench (14.7 (Debian 14.7-1.pgdg110+1))
      -- starting vacuum...end.
      -- progress: 60.0 s, 512.9 tps, lat 15.586 ms stddev 13.264
      -- progress: 120.0 s, 468.9 tps, lat 17.054 ms stddev 15.062
      -- progress: 180.0 s, 463.9 tps, lat 17.238 ms stddev 13.788
      -- progress: 240.0 s, 532.0 tps, lat 15.031 ms stddev 13.085
      -- progress: 300.0 s, 522.4 tps, lat 15.309 ms stddev 12.152
      -- progress: 360.0 s, 515.5 tps, lat 15.513 ms stddev 12.178
      -- progress: 420.0 s, 537.9 tps, lat 14.867 ms stddev 11.462
      -- progress: 480.0 s, 390.1 tps, lat 20.497 ms stddev 17.756
      -- progress: 540.0 s, 515.4 tps, lat 15.521 ms stddev 12.894
      -- progress: 600.0 s, 476.7 tps, lat 16.776 ms stddev 14.308
      -- transaction type: <builtin: TPC-B (sort of)>
      -- scaling factor: 1
      -- query mode: simple
      -- number of clients: 8
      -- number of threads: 1
      -- duration: 600 s
      -- number of transactions actually processed: 296152
      -- latency average = 16.202 ms
      -- latency stddev = 13.633 ms
      -- initial connection time = 13.248 ms
      -- tps = 493.583824 (without initial connection time)

7-9)дальше настроить autovacuum максимально эффективноб,построить график по получившимся значениям,так чтобы получить максимально ровное значение tps
| pgbench -c8 -P 10 -T 100 -U postgres postgres | default    | recommeded | custom1    | custom2    | custom3    |
|-----------------------------------------------|------------|------------|------------|------------|------------|
|                                               | tps        |            |            |            |            |
| sec                                           | run1       | run2       | run3       | run4       | run5       |
| 10                                            | 349.3      | 531.8      | 365.6      | 413.3      | 424.8      |
| 20                                            | 243.2      | 413.7      | 450.4      | 454.3      | 624.2      |
| 30                                            | 429.4      | 518.6      | 483.8      | 386.1      | 344.9      |
| 40                                            | 525.9      | 444.7      | 467.7      | 550.2      | 420.3      |
| 50                                            | 487.5      | 245.7      | 541.6      | 518.6      | 547.6      |
| 60                                            | 395.4      | 340.2      | 470.4      | 515.4      | 527.6      |
| 70                                            | 292.6      | 550.5      | 282.9      | 404.6      | 410.0      |
| 80                                            | 510.9      | 436.3      | 563.9      | 361.1      | 488.4      |
| 90                                            | 323.8      | 537.4      | 525.5      | 328.4      | 433.8      |
| 100                                           | 467.0      | 489.2      | 391.9      | 471.8      | 471.3      |
| tps average                                   | 402.487496 | 450.850104 | 454.399298 | 440.219556 | 469.318572 |
| number of transactions                        | 40258      | 45089      | 45445      | 44046      | 46937      |
      -- немного пошаманив с настройками добился максимальной произвеодительности, но прирост не столь высок относительно рекомендованных на занятии.
      -- log_autovacuum_min_duration = 0         
      -- autovacuum = on                         
      -- autovacuum_max_workers = 2              
      -- autovacuum_naptime = 10s                
      -- autovacuum_vacuum_threshold = 50        
      -- autovacuum_vacuum_scale_factor = 0.1    
      -- autovacuum_vacuum_cost_delay = 10ms     
      -- autovacuum_vacuum_cost_limit = -1    
Рост производительности от дефолтных значений до рекомендованных 12.015928%
Рост производительности от дефолтных значений до кастомных 16.60451%
Рост производительности от рекомендованных до кастомных  4.096365%

В заключении, можно смело пользоваться рекомендованными, и только в сверхнагруженны системах уходить в кастомизацию, где 4 процента имееют вес.

EOF
